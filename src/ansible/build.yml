---
- hosts: backup
  roles:
    - ten7.flightdeck_base
  tasks:
    - name: Create a temp directory to store files needed by the run
      tempfile:
        state: directory
        prefix: "ansible-deploy-"
      register: _run_temp_dir
      notify:
        - clear caches
    - name: Install necessary software.
      community.general.apk:
        name: "{{ _packages | join(',') }}"
        state: present
        update_cache: yes
      notify:
        - clear apk cache
      vars:
        _packages:
          - "zlib"
          - "php8"
          - "git"
          - "patch"
          - "curl"
          - "php8-bcmath"
          - "php8-ctype"
          - "php8-curl"
          - "php8-dom"
          - "php8-fileinfo"
          - "php8-intl"
          - "php8-json"
          - "php8-ldap"
          - "php8-mbstring"
          - "php8-openssl"
          - "php8-phar"
          - "php8-phar"
          - "php8-soap"
          - "php8-session"
          - "php8-simplexml"
          - "php8-sodium"
          - "php8-tokenizer"
          - "php8-xml"
          - "php8-xmlreader"
          - "php8-xmlwriter"
          - "php8-zip"
          - "php8-zlib"
          - "composer"
          - "rsync"
          - "rclone"
          - "openssh-client"
          - "py3-boto3"
          - "py3-botocore"
          - "py3-chardet"
          - "py3-jmespath"
          - "py3-pip"
          - "py3-urllib3"
          - "tree"
    - name: Install the additional packages from pip
      pip:
        name:
          - "s3cmd"
        extra_args: "--no-cache-dir"
    - name: Create the /usr/bin/php symlink
      file:
        src: "/usr/bin/php8"
        dest: "/usr/bin/php"
        state: link
        owner: "root"
        group: "root"
        force: yes        
    - name: Download the Platform.sh cli
      get_url:
        url: "{{ platformsh_cli_url }}"
        dest: "/usr/local/bin/platform"
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
    - name: Install Platform.sh cli
      shell: >
        /usr/local/bin/platform self:install --yes 
    - name: Deploy key scripts.
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
      loop:
        - src: "templates/platformsh-backup.sh.j2"
          dest: "/usr/local/bin/platformsh-backup"
    - name: Configure SSH
      lineinfile:
        path: "/home/backup/.ssh/config"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        create: yes
        owner: "backup"
        group: "backup"
        mode: "u=rx,g=rx,o="
      loop:
        - regexp: "StrictHostKeyChecking="
          line: "StrictHostKeyChecking=accept-new"
        - regexp: "PubkeyAcceptedAlgorithms="
          line: "PubkeyAcceptedAlgorithms=+ssh-rsa"
        - regexp: "HostkeyAlgorithms="
          line: "HostkeyAlgorithms=+ssh-rsa"
    - name: Create the backup directory
      file:
        path: "/backups"
        state: directory
        owner: "backup"
        group: "backup"
        mode: "u=rwx,g=rwx,o="
    - name: Update permissions of key directories
      file:
         path: "{{ item }}"
         state: directory
         owner: "backup"
         group: "backup"
         mode: "u=rwx,g=rwx,o="
      loop:
        - "/ansible"
        - "/home/backup/.ssh"
        
  handlers:
    - name: clear caches
      shell: >
        rm -rf {{ item }}
      args:
        warn: no
      loop:
        - "/tmp/*"
        - "/var/cache/apk/*"
        - "/var/www/.composer/cache"
        - "/root/.ansible/tmp"
        - "/root/.cache"
